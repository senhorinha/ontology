package ia.animais;

import ia.animais.impl.DefaultAgressivo;
import ia.animais.impl.DefaultAnfibios;
import ia.animais.impl.DefaultAnimal;
import ia.animais.impl.DefaultAquatico;
import ia.animais.impl.DefaultAssexuada;
import ia.animais.impl.DefaultAves;
import ia.animais.impl.DefaultBraquial;
import ia.animais.impl.DefaultCalmo;
import ia.animais.impl.DefaultCaminha;
import ia.animais.impl.DefaultCaracteristicas;
import ia.animais.impl.DefaultClasse;
import ia.animais.impl.DefaultCobertura;
import ia.animais.impl.DefaultComportamento;
import ia.animais.impl.DefaultConcha;
import ia.animais.impl.DefaultCutanea;
import ia.animais.impl.DefaultEscamas;
import ia.animais.impl.DefaultHabitat;
import ia.animais.impl.DefaultIrracional;
import ia.animais.impl.DefaultLocomo√ßao;
import ia.animais.impl.DefaultMamiferos;
import ia.animais.impl.DefaultNada;
import ia.animais.impl.DefaultPeixes;
import ia.animais.impl.DefaultPelos;
import ia.animais.impl.DefaultPenas;
import ia.animais.impl.DefaultPulmonar;
import ia.animais.impl.DefaultRaciocinio;
import ia.animais.impl.DefaultRacional;
import ia.animais.impl.DefaultRasteja;
import ia.animais.impl.DefaultReproducao;
import ia.animais.impl.DefaultRepteis;
import ia.animais.impl.DefaultRespiracao;
import ia.animais.impl.DefaultSalta;
import ia.animais.impl.DefaultSexuada;
import ia.animais.impl.DefaultTerrestre;
import ia.animais.impl.DefaultVoa;

import java.util.Collection;

import org.protege.owl.codegeneration.CodeGenerationFactory;
import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.FactoryHelper;
import org.protege.owl.codegeneration.impl.ProtegeJavaMapping;
import org.protege.owl.codegeneration.inference.CodeGenerationInference;
import org.protege.owl.codegeneration.inference.SimpleInference;
import org.semanticweb.owlapi.model.OWLClass;
import org.semanticweb.owlapi.model.OWLOntology;
import org.semanticweb.owlapi.model.OWLOntologyStorageException;

/**
 * A class that serves as the entry point to the generated code providing access
 * to existing individuals in the ontology and the ability to create new
 * individuals in the ontology.
 * <p>
 *
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: MyFactory<br>
 *
 * @version generated on Thu May 07 17:00:00 BRT 2015 by caio
 */
public class MyFactory implements CodeGenerationFactory {
	private OWLOntology ontology;
	private ProtegeJavaMapping javaMapping = new ProtegeJavaMapping();
	private FactoryHelper delegate;
	private CodeGenerationInference inference;

	public MyFactory(OWLOntology ontology) {
		this(ontology, new SimpleInference(ontology));
	}

	public MyFactory(OWLOntology ontology, CodeGenerationInference inference) {
		this.ontology = ontology;
		this.inference = inference;
		this.javaMapping.initialize(ontology, inference);
		this.delegate = new FactoryHelper(ontology, inference);
	}

	public OWLOntology getOwlOntology() {
		return this.ontology;
	}

	public void saveOwlOntology() throws OWLOntologyStorageException {
		this.ontology.getOWLOntologyManager().saveOntology(this.ontology);
	}

	public void flushOwlReasoner() {
		this.delegate.flushOwlReasoner();
	}

	public boolean canAs(WrappedIndividual resource, Class<? extends WrappedIndividual> javaInterface) {
		return this.javaMapping.canAs(resource, javaInterface);
	}

	public <X extends WrappedIndividual> X as(WrappedIndividual resource, Class<? extends X> javaInterface) {
		return this.javaMapping.as(resource, javaInterface);
	}

	public Class<?> getJavaInterfaceFromOwlClass(OWLClass cls) {
		return this.javaMapping.getJavaInterfaceFromOwlClass(cls);
	}

	public OWLClass getOwlClassFromJavaInterface(Class<?> javaInterface) {
		return this.javaMapping.getOwlClassFromJavaInterface(javaInterface);
	}

	public CodeGenerationInference getInference() {
		return this.inference;
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#agressivo
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#agressivo", Agressivo.class, DefaultAgressivo.class);
	}

	/**
	 * Creates an instance of type Agressivo. Modifies the underlying ontology.
	 */
	public Agressivo createAgressivo(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_AGRESSIVO, DefaultAgressivo.class);
	}

	/**
	 * Gets an instance of type Agressivo with the given name. Does not modify
	 * the underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Agressivo getAgressivo(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_AGRESSIVO, DefaultAgressivo.class);
	}

	/**
	 * Gets all instances of Agressivo from the ontology.
	 */
	public Collection<? extends Agressivo> getAllAgressivoInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_AGRESSIVO, DefaultAgressivo.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#anfibios
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#anfibios", Anfibios.class, DefaultAnfibios.class);
	}

	/**
	 * Creates an instance of type Anfibios. Modifies the underlying ontology.
	 */
	public Anfibios createAnfibios(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_ANFIBIOS, DefaultAnfibios.class);
	}

	/**
	 * Gets an instance of type Anfibios with the given name. Does not modify
	 * the underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Anfibios getAnfibios(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_ANFIBIOS, DefaultAnfibios.class);
	}

	/**
	 * Gets all instances of Anfibios from the ontology.
	 */
	public Collection<? extends Anfibios> getAllAnfibiosInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_ANFIBIOS, DefaultAnfibios.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#animal
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#animal", Animal.class, DefaultAnimal.class);
	}

	/**
	 * Creates an instance of type Animal. Modifies the underlying ontology.
	 */
	public Animal createAnimal(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_ANIMAL, DefaultAnimal.class);
	}

	/**
	 * Gets an instance of type Animal with the given name. Does not modify the
	 * underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Animal getAnimal(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_ANIMAL, DefaultAnimal.class);
	}

	/**
	 * Gets all instances of Animal from the ontology.
	 */
	public Collection<? extends Animal> getAllAnimalInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_ANIMAL, DefaultAnimal.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#aquatico
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#aquatico", Aquatico.class, DefaultAquatico.class);
	}

	/**
	 * Creates an instance of type Aquatico. Modifies the underlying ontology.
	 */
	public Aquatico createAquatico(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_AQUATICO, DefaultAquatico.class);
	}

	/**
	 * Gets an instance of type Aquatico with the given name. Does not modify
	 * the underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Aquatico getAquatico(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_AQUATICO, DefaultAquatico.class);
	}

	/**
	 * Gets all instances of Aquatico from the ontology.
	 */
	public Collection<? extends Aquatico> getAllAquaticoInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_AQUATICO, DefaultAquatico.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#assexuada
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#assexuada", Assexuada.class, DefaultAssexuada.class);
	}

	/**
	 * Creates an instance of type Assexuada. Modifies the underlying ontology.
	 */
	public Assexuada createAssexuada(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_ASSEXUADA, DefaultAssexuada.class);
	}

	/**
	 * Gets an instance of type Assexuada with the given name. Does not modify
	 * the underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Assexuada getAssexuada(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_ASSEXUADA, DefaultAssexuada.class);
	}

	/**
	 * Gets all instances of Assexuada from the ontology.
	 */
	public Collection<? extends Assexuada> getAllAssexuadaInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_ASSEXUADA, DefaultAssexuada.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#aves
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#aves", Aves.class, DefaultAves.class);
	}

	/**
	 * Creates an instance of type Aves. Modifies the underlying ontology.
	 */
	public Aves createAves(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_AVES, DefaultAves.class);
	}

	/**
	 * Gets an instance of type Aves with the given name. Does not modify the
	 * underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Aves getAves(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_AVES, DefaultAves.class);
	}

	/**
	 * Gets all instances of Aves from the ontology.
	 */
	public Collection<? extends Aves> getAllAvesInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_AVES, DefaultAves.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#Braquial
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#Braquial", Braquial.class, DefaultBraquial.class);
	}

	/**
	 * Creates an instance of type Braquial. Modifies the underlying ontology.
	 */
	public Braquial createBraquial(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_Braquial, DefaultBraquial.class);
	}

	/**
	 * Gets an instance of type Braquial with the given name. Does not modify
	 * the underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Braquial getBraquial(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_Braquial, DefaultBraquial.class);
	}

	/**
	 * Gets all instances of Braquial from the ontology.
	 */
	public Collection<? extends Braquial> getAllBraquialInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_Braquial, DefaultBraquial.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#calmo
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#calmo", Calmo.class, DefaultCalmo.class);
	}

	/**
	 * Creates an instance of type Calmo. Modifies the underlying ontology.
	 */
	public Calmo createCalmo(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_CALMO, DefaultCalmo.class);
	}

	/**
	 * Gets an instance of type Calmo with the given name. Does not modify the
	 * underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Calmo getCalmo(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_CALMO, DefaultCalmo.class);
	}

	/**
	 * Gets all instances of Calmo from the ontology.
	 */
	public Collection<? extends Calmo> getAllCalmoInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_CALMO, DefaultCalmo.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#caminha
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#caminha", Caminha.class, DefaultCaminha.class);
	}

	/**
	 * Creates an instance of type Caminha. Modifies the underlying ontology.
	 */
	public Caminha createCaminha(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_CAMINHA, DefaultCaminha.class);
	}

	/**
	 * Gets an instance of type Caminha with the given name. Does not modify the
	 * underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Caminha getCaminha(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_CAMINHA, DefaultCaminha.class);
	}

	/**
	 * Gets all instances of Caminha from the ontology.
	 */
	public Collection<? extends Caminha> getAllCaminhaInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_CAMINHA, DefaultCaminha.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#caracteristicas
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#caracteristicas", Caracteristicas.class, DefaultCaracteristicas.class);
	}

	/**
	 * Creates an instance of type Caracteristicas. Modifies the underlying
	 * ontology.
	 */
	public Caracteristicas createCaracteristicas(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_CARACTERISTICAS, DefaultCaracteristicas.class);
	}

	/**
	 * Gets an instance of type Caracteristicas with the given name. Does not
	 * modify the underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Caracteristicas getCaracteristicas(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_CARACTERISTICAS, DefaultCaracteristicas.class);
	}

	/**
	 * Gets all instances of Caracteristicas from the ontology.
	 */
	public Collection<? extends Caracteristicas> getAllCaracteristicasInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_CARACTERISTICAS, DefaultCaracteristicas.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#classe
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#classe", Classe.class, DefaultClasse.class);
	}

	/**
	 * Creates an instance of type Classe. Modifies the underlying ontology.
	 */
	public Classe createClasse(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_CLASSE, DefaultClasse.class);
	}

	/**
	 * Gets an instance of type Classe with the given name. Does not modify the
	 * underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Classe getClasse(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_CLASSE, DefaultClasse.class);
	}

	/**
	 * Gets all instances of Classe from the ontology.
	 */
	public Collection<? extends Classe> getAllClasseInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_CLASSE, DefaultClasse.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#cobertura
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#cobertura", Cobertura.class, DefaultCobertura.class);
	}

	/**
	 * Creates an instance of type Cobertura. Modifies the underlying ontology.
	 */
	public Cobertura createCobertura(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_COBERTURA, DefaultCobertura.class);
	}

	/**
	 * Gets an instance of type Cobertura with the given name. Does not modify
	 * the underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Cobertura getCobertura(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_COBERTURA, DefaultCobertura.class);
	}

	/**
	 * Gets all instances of Cobertura from the ontology.
	 */
	public Collection<? extends Cobertura> getAllCoberturaInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_COBERTURA, DefaultCobertura.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#comportamento
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#comportamento", Comportamento.class, DefaultComportamento.class);
	}

	/**
	 * Creates an instance of type Comportamento. Modifies the underlying
	 * ontology.
	 */
	public Comportamento createComportamento(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_COMPORTAMENTO, DefaultComportamento.class);
	}

	/**
	 * Gets an instance of type Comportamento with the given name. Does not
	 * modify the underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Comportamento getComportamento(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_COMPORTAMENTO, DefaultComportamento.class);
	}

	/**
	 * Gets all instances of Comportamento from the ontology.
	 */
	public Collection<? extends Comportamento> getAllComportamentoInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_COMPORTAMENTO, DefaultComportamento.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#concha
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#concha", Concha.class, DefaultConcha.class);
	}

	/**
	 * Creates an instance of type Concha. Modifies the underlying ontology.
	 */
	public Concha createConcha(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_CONCHA, DefaultConcha.class);
	}

	/**
	 * Gets an instance of type Concha with the given name. Does not modify the
	 * underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Concha getConcha(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_CONCHA, DefaultConcha.class);
	}

	/**
	 * Gets all instances of Concha from the ontology.
	 */
	public Collection<? extends Concha> getAllConchaInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_CONCHA, DefaultConcha.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#cutanea
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#cutanea", Cutanea.class, DefaultCutanea.class);
	}

	/**
	 * Creates an instance of type Cutanea. Modifies the underlying ontology.
	 */
	public Cutanea createCutanea(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_CUTANEA, DefaultCutanea.class);
	}

	/**
	 * Gets an instance of type Cutanea with the given name. Does not modify the
	 * underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Cutanea getCutanea(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_CUTANEA, DefaultCutanea.class);
	}

	/**
	 * Gets all instances of Cutanea from the ontology.
	 */
	public Collection<? extends Cutanea> getAllCutaneaInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_CUTANEA, DefaultCutanea.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#escamas
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#escamas", Escamas.class, DefaultEscamas.class);
	}

	/**
	 * Creates an instance of type Escamas. Modifies the underlying ontology.
	 */
	public Escamas createEscamas(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_ESCAMAS, DefaultEscamas.class);
	}

	/**
	 * Gets an instance of type Escamas with the given name. Does not modify the
	 * underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Escamas getEscamas(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_ESCAMAS, DefaultEscamas.class);
	}

	/**
	 * Gets all instances of Escamas from the ontology.
	 */
	public Collection<? extends Escamas> getAllEscamasInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_ESCAMAS, DefaultEscamas.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#habitat
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#habitat", Habitat.class, DefaultHabitat.class);
	}

	/**
	 * Creates an instance of type Habitat. Modifies the underlying ontology.
	 */
	public Habitat createHabitat(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_HABITAT, DefaultHabitat.class);
	}

	/**
	 * Gets an instance of type Habitat with the given name. Does not modify the
	 * underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Habitat getHabitat(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_HABITAT, DefaultHabitat.class);
	}

	/**
	 * Gets all instances of Habitat from the ontology.
	 */
	public Collection<? extends Habitat> getAllHabitatInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_HABITAT, DefaultHabitat.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#irracional
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#irracional", Irracional.class, DefaultIrracional.class);
	}

	/**
	 * Creates an instance of type Irracional. Modifies the underlying ontology.
	 */
	public Irracional createIrracional(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_IRRACIONAL, DefaultIrracional.class);
	}

	/**
	 * Gets an instance of type Irracional with the given name. Does not modify
	 * the underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Irracional getIrracional(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_IRRACIONAL, DefaultIrracional.class);
	}

	/**
	 * Gets all instances of Irracional from the ontology.
	 */
	public Collection<? extends Irracional> getAllIrracionalInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_IRRACIONAL, DefaultIrracional.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#locomo√ßao
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#locomo√ßao", Locomo√ßao.class, DefaultLocomo√ßao.class);
	}

	/**
	 * Creates an instance of type Locomo√ßao. Modifies the underlying ontology.
	 */
	public Locomo√ßao createLocomo√ßao(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_LOCOMO√áAO, DefaultLocomo√ßao.class);
	}

	/**
	 * Gets an instance of type Locomo√ßao with the given name. Does not modify
	 * the underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Locomo√ßao getLocomo√ßao(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_LOCOMO√áAO, DefaultLocomo√ßao.class);
	}

	/**
	 * Gets all instances of Locomo√ßao from the ontology.
	 */
	public Collection<? extends Locomo√ßao> getAllLocomo√ßaoInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_LOCOMO√áAO, DefaultLocomo√ßao.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#mamiferos
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#mamiferos", Mamiferos.class, DefaultMamiferos.class);
	}

	/**
	 * Creates an instance of type Mamiferos. Modifies the underlying ontology.
	 */
	public Mamiferos createMamiferos(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_MAMIFEROS, DefaultMamiferos.class);
	}

	/**
	 * Gets an instance of type Mamiferos with the given name. Does not modify
	 * the underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Mamiferos getMamiferos(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_MAMIFEROS, DefaultMamiferos.class);
	}

	/**
	 * Gets all instances of Mamiferos from the ontology.
	 */
	public Collection<? extends Mamiferos> getAllMamiferosInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_MAMIFEROS, DefaultMamiferos.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#nada
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#nada", Nada.class, DefaultNada.class);
	}

	/**
	 * Creates an instance of type Nada. Modifies the underlying ontology.
	 */
	public Nada createNada(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_NADA, DefaultNada.class);
	}

	/**
	 * Gets an instance of type Nada with the given name. Does not modify the
	 * underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Nada getNada(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_NADA, DefaultNada.class);
	}

	/**
	 * Gets all instances of Nada from the ontology.
	 */
	public Collection<? extends Nada> getAllNadaInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_NADA, DefaultNada.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#peixes
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#peixes", Peixes.class, DefaultPeixes.class);
	}

	/**
	 * Creates an instance of type Peixes. Modifies the underlying ontology.
	 */
	public Peixes createPeixes(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_PEIXES, DefaultPeixes.class);
	}

	/**
	 * Gets an instance of type Peixes with the given name. Does not modify the
	 * underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Peixes getPeixes(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_PEIXES, DefaultPeixes.class);
	}

	/**
	 * Gets all instances of Peixes from the ontology.
	 */
	public Collection<? extends Peixes> getAllPeixesInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_PEIXES, DefaultPeixes.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#pelos
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#pelos", Pelos.class, DefaultPelos.class);
	}

	/**
	 * Creates an instance of type Pelos. Modifies the underlying ontology.
	 */
	public Pelos createPelos(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_PELOS, DefaultPelos.class);
	}

	/**
	 * Gets an instance of type Pelos with the given name. Does not modify the
	 * underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Pelos getPelos(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_PELOS, DefaultPelos.class);
	}

	/**
	 * Gets all instances of Pelos from the ontology.
	 */
	public Collection<? extends Pelos> getAllPelosInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_PELOS, DefaultPelos.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#penas
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#penas", Penas.class, DefaultPenas.class);
	}

	/**
	 * Creates an instance of type Penas. Modifies the underlying ontology.
	 */
	public Penas createPenas(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_PENAS, DefaultPenas.class);
	}

	/**
	 * Gets an instance of type Penas with the given name. Does not modify the
	 * underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Penas getPenas(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_PENAS, DefaultPenas.class);
	}

	/**
	 * Gets all instances of Penas from the ontology.
	 */
	public Collection<? extends Penas> getAllPenasInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_PENAS, DefaultPenas.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#pulmonar
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#pulmonar", Pulmonar.class, DefaultPulmonar.class);
	}

	/**
	 * Creates an instance of type Pulmonar. Modifies the underlying ontology.
	 */
	public Pulmonar createPulmonar(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_PULMONAR, DefaultPulmonar.class);
	}

	/**
	 * Gets an instance of type Pulmonar with the given name. Does not modify
	 * the underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Pulmonar getPulmonar(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_PULMONAR, DefaultPulmonar.class);
	}

	/**
	 * Gets all instances of Pulmonar from the ontology.
	 */
	public Collection<? extends Pulmonar> getAllPulmonarInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_PULMONAR, DefaultPulmonar.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#raciocinio
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#raciocinio", Raciocinio.class, DefaultRaciocinio.class);
	}

	/**
	 * Creates an instance of type Raciocinio. Modifies the underlying ontology.
	 */
	public Raciocinio createRaciocinio(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_RACIOCINIO, DefaultRaciocinio.class);
	}

	/**
	 * Gets an instance of type Raciocinio with the given name. Does not modify
	 * the underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Raciocinio getRaciocinio(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_RACIOCINIO, DefaultRaciocinio.class);
	}

	/**
	 * Gets all instances of Raciocinio from the ontology.
	 */
	public Collection<? extends Raciocinio> getAllRaciocinioInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_RACIOCINIO, DefaultRaciocinio.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#racional
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#racional", Racional.class, DefaultRacional.class);
	}

	/**
	 * Creates an instance of type Racional. Modifies the underlying ontology.
	 */
	public Racional createRacional(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_RACIONAL, DefaultRacional.class);
	}

	/**
	 * Gets an instance of type Racional with the given name. Does not modify
	 * the underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Racional getRacional(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_RACIONAL, DefaultRacional.class);
	}

	/**
	 * Gets all instances of Racional from the ontology.
	 */
	public Collection<? extends Racional> getAllRacionalInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_RACIONAL, DefaultRacional.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#rasteja
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#rasteja", Rasteja.class, DefaultRasteja.class);
	}

	/**
	 * Creates an instance of type Rasteja. Modifies the underlying ontology.
	 */
	public Rasteja createRasteja(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_RASTEJA, DefaultRasteja.class);
	}

	/**
	 * Gets an instance of type Rasteja with the given name. Does not modify the
	 * underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Rasteja getRasteja(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_RASTEJA, DefaultRasteja.class);
	}

	/**
	 * Gets all instances of Rasteja from the ontology.
	 */
	public Collection<? extends Rasteja> getAllRastejaInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_RASTEJA, DefaultRasteja.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#reproducao
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#reproducao", Reproducao.class, DefaultReproducao.class);
	}

	/**
	 * Creates an instance of type Reproducao. Modifies the underlying ontology.
	 */
	public Reproducao createReproducao(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_REPRODUCAO, DefaultReproducao.class);
	}

	/**
	 * Gets an instance of type Reproducao with the given name. Does not modify
	 * the underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Reproducao getReproducao(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_REPRODUCAO, DefaultReproducao.class);
	}

	/**
	 * Gets all instances of Reproducao from the ontology.
	 */
	public Collection<? extends Reproducao> getAllReproducaoInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_REPRODUCAO, DefaultReproducao.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#repteis
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#repteis", Repteis.class, DefaultRepteis.class);
	}

	/**
	 * Creates an instance of type Repteis. Modifies the underlying ontology.
	 */
	public Repteis createRepteis(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_REPTEIS, DefaultRepteis.class);
	}

	/**
	 * Gets an instance of type Repteis with the given name. Does not modify the
	 * underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Repteis getRepteis(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_REPTEIS, DefaultRepteis.class);
	}

	/**
	 * Gets all instances of Repteis from the ontology.
	 */
	public Collection<? extends Repteis> getAllRepteisInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_REPTEIS, DefaultRepteis.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#respira√ßao
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#respira√ßao", Respiracao.class, DefaultRespiracao.class);
	}

	/**
	 * Creates an instance of type Respira√ßao. Modifies the underlying ontology.
	 */
	public Respiracao createRespira√ßao(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_RESPIRA√áAO, DefaultRespiracao.class);
	}

	/**
	 * Gets an instance of type Respira√ßao with the given name. Does not modify
	 * the underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Respiracao getRespiracao(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_RESPIRA√áAO, DefaultRespiracao.class);
	}

	/**
	 * Gets all instances of Respira√ßao from the ontology.
	 */
	public Collection<? extends Respiracao> getAllRespira√ßaoInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_RESPIRA√áAO, DefaultRespiracao.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#salta
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#salta", Salta.class, DefaultSalta.class);
	}

	/**
	 * Creates an instance of type Salta. Modifies the underlying ontology.
	 */
	public Salta createSalta(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_SALTA, DefaultSalta.class);
	}

	/**
	 * Gets an instance of type Salta with the given name. Does not modify the
	 * underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Salta getSalta(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_SALTA, DefaultSalta.class);
	}

	/**
	 * Gets all instances of Salta from the ontology.
	 */
	public Collection<? extends Salta> getAllSaltaInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_SALTA, DefaultSalta.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#sexuada
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#sexuada", Sexuada.class, DefaultSexuada.class);
	}

	/**
	 * Creates an instance of type Sexuada. Modifies the underlying ontology.
	 */
	public Sexuada createSexuada(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_SEXUADA, DefaultSexuada.class);
	}

	/**
	 * Gets an instance of type Sexuada with the given name. Does not modify the
	 * underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Sexuada getSexuada(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_SEXUADA, DefaultSexuada.class);
	}

	/**
	 * Gets all instances of Sexuada from the ontology.
	 */
	public Collection<? extends Sexuada> getAllSexuadaInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_SEXUADA, DefaultSexuada.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-
	 * 3#terrestre
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#terrestre", Terrestre.class, DefaultTerrestre.class);
	}

	/**
	 * Creates an instance of type Terrestre. Modifies the underlying ontology.
	 */
	public Terrestre createTerrestre(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_TERRESTRE, DefaultTerrestre.class);
	}

	/**
	 * Gets an instance of type Terrestre with the given name. Does not modify
	 * the underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Terrestre getTerrestre(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_TERRESTRE, DefaultTerrestre.class);
	}

	/**
	 * Gets all instances of Terrestre from the ontology.
	 */
	public Collection<? extends Terrestre> getAllTerrestreInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_TERRESTRE, DefaultTerrestre.class);
	}

	/* ***************************************************
	 * Class
	 * http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#voa
	 */

	{
		this.javaMapping.add("http://www.semanticweb.org/caio/ontologies/2015/3/untitled-ontology-3#voa", Voa.class, DefaultVoa.class);
	}

	/**
	 * Creates an instance of type Voa. Modifies the underlying ontology.
	 */
	public Voa createVoa(String name) {
		return this.delegate.createWrappedIndividual(name, Vocabulary.CLASS_VOA, DefaultVoa.class);
	}

	/**
	 * Gets an instance of type Voa with the given name. Does not modify the
	 * underlying ontology.
	 *
	 * @param name
	 *            the name of the OWL named individual to be retrieved.
	 */
	public Voa getVoa(String name) {
		return this.delegate.getWrappedIndividual(name, Vocabulary.CLASS_VOA, DefaultVoa.class);
	}

	/**
	 * Gets all instances of Voa from the ontology.
	 */
	public Collection<? extends Voa> getAllVoaInstances() {
		return this.delegate.getWrappedIndividuals(Vocabulary.CLASS_VOA, DefaultVoa.class);
	}

}
